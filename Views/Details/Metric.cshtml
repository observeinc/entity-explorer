@using Observe.EntityExplorer.DataObjects;
@using System.Text;

@model Observe.EntityExplorer.Models.DetailsMetricViewModel;

@{
    if (@Model.CurrentMetric != null)
    {
        ViewData["Title"] = String.Format("{0} ({1}) Metric Details", @Model.CurrentMetric.name, @Model.CurrentMetric.datasetName);
    }
}

<p>
    <span class="spanError">@ViewData["ErrorMessage"]</span>
</p>
@if (ViewData["ErrorMessage"] != null)
{
    return;
}

<p>@Html.ActionLink("Back to Home", "Index", "Home", new { userid=@Model.CurrentUser.UniqueID }, null)</p>

@{
    List<ObsStage> datasetStages = Model.SearchResults.Where(s => s.Parent is ObsDataset).ToList();

    List<ObsStage> dashboardStages = Model.SearchResults.Where(s => s.Parent is ObsDashboard).ToList();

    List<ObsStage> monitorStages = Model.SearchResults.Where(s => s.Parent is ObsMonitor).ToList();

    List<ObsStage> monitor2Stages = Model.SearchResults.Where(s => s.Parent is ObsMonitor2).ToList();

    List<ObsStage> worksheetStages = Model.SearchResults.Where(s => s.Parent is ObsWorksheet).ToList();
}

<h1>@Model.ObserveEnvironment.getIconType(@Model.CurrentMetric) Metric Details - @Model.CurrentMetric.name (@Model.CurrentMetric.datasetName)</h1>

<p>
    <a href="#Datasets">@Model.ObserveEnvironment.getIconType(((ObsCompositeObject)new ObsDataset())) Datasets (@datasetStages.Count)</a> 
    <a href="#Dashboards">@Model.ObserveEnvironment.getIconType(new ObsDashboard()) Dashboards (@dashboardStages.Count)</a> 
    <a href="#Monitors">@Model.ObserveEnvironment.getIconType(new ObsMonitor()) Monitors (legacy) (@monitorStages.Count)</a> 
    <a href="#Monitors2">@Model.ObserveEnvironment.getIconType(new ObsMonitor2()) Monitors v2 (@monitor2Stages.Count)</a> 
    <a href="#Worksheets">@Model.ObserveEnvironment.getIconType(new ObsWorksheet()) Worksheets (@worksheetStages.Count)</a> 
</p>

<table>
    <tr>
        <td>Observe</td>
        <td>
            <a href="@String.Format("{0}workspace/{1}/metric-explorer?datasetId={2}&metricName={3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.CurrentMetric.datasetId, @Model.CurrentMetric.name)">📄 Data</a></td>            
        </td>
    <tr>
        <td>Name</td>
        <td>
            @Model.CurrentMetric.name in @Model.CurrentMetric.datasetName (@Model.CurrentMetric.datasetId)
            <br/>
            <code id="searchQuery" class="language-json">"@Model.CurrentMetric.name"</code>
        </td>
    </tr>
    <tr>
        <td>Dataset</td>
        <td>
            @Html.ActionLink("🎫 View", "Dataset", "Details", new { id=@Model.CurrentMetric.datasetId, userid=@Model.CurrentUser.UniqueID }, null) @Model.CurrentMetric.datasetName (@Model.CurrentMetric.datasetId)
        </td>
    </tr>
    <tr>
        <td>Description</td>
        <td>@Model.CurrentMetric.description</td>
    </tr>
    <tr>
        <td>Type</td>
        <td>@Model.CurrentMetric.type</td>
    </tr>
    <tr>
        <td>Unit</td>
        <td>@Model.CurrentMetric.unit</td>
    </tr>
    <tr>
        <td>Rollup</td>
        <td>@Model.CurrentMetric.rollup</td>
    </tr>
    <tr>
        <td>Aggregation</td>
        <td>@Model.CurrentMetric.aggregate</td>
    </tr>
    <tr>
        <td>Interval</td>
        <td>@Model.CurrentMetric.interval</td>
    </tr>
    <tr>
        <td>Bucket Size</td>
        <td>@Model.CurrentMetric.suggestedBucketSize</td>
    </tr>
    <tr>
        <td>State</td>
        <td>@Model.CurrentMetric.state</td>
    </tr>
    <tr>
        <td>Had set_options?</td>
        <td>@Model.CurrentMetric.userDefined</td>
    </tr>
    <tr>
        <td>Heuristics: Cardinality</td>
        <td>@Model.CurrentMetric.cardinality</td>
    </tr>
    <tr>
        <td>Heuristics: Number of Points</td>
        <td>@Model.CurrentMetric.numPoints</td>
    </tr>
    <tr>
        <td>Heuristics: Interval</td>
        <td>@Model.CurrentMetric.discoveredInterval</td>
    </tr>
    <tr>
        <td>Heuristics: Interval StdDev</td>
        <td>@Model.CurrentMetric.discoveredIntervalStdDev</td>
    </tr>
    <tr>
        <td>Last Reported</td>
        <td>@Model.CurrentMetric.lastReported.ToString("u")</td>
    </tr>
    <tr>
        <td>Tags</td>
        <td colspan="2"><pre><code class="language-json">@Model.CurrentMetric.Tags</code></pre></td>
    </tr>
    <tr>
        <td>Link Labels</td>
        <td colspan="2"><pre><code class="language-json">@Model.CurrentMetric.LinkLabels</code></pre></td>
    </tr>
</table>

<input id="checkboxOPALPreviews" type="checkbox" checked="true" value="Show/Hide OPAL Blocks" onclick="showOrHideOPALPreviews(this)"/>
<label for="checkboxOPALPreviews">Show/Hide OPAL Stages</label>

<h2 id="Datasets">@Model.ObserveEnvironment.getIconType(((ObsCompositeObject)new ObsDataset())) Datasets</h2>
<a href="#top">Back to Top</a>

@foreach(ObsStage stage in datasetStages)
{
    ObsDataset entity = (ObsDataset)(stage.Parent);
    <table class="AlternatingRowTable">
        <tr>
            <td><input id="checkboxOPALPreview_@entity.id" type="checkbox" checked="true" value="Show/Hide OPAL" onclick="showOrHideOPALPreview(this, 'code_' + @entity.id)"/> <label for="checkboxOPALPreview_@entity.id">Show/Hide OPAL</label></td>
            <td>@Html.ActionLink("🎫 View", "Dataset", "Details", null, null, stage.id, new { id = entity.id, userid=@Model.CurrentUser.UniqueID, keyword = String.Format("\"{0}\"", @Model.CurrentMetric.name)}, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entity), entity.id)">📄 Data</a></td>
            <td>@Model.ObserveEnvironment.getIconType(entity) @entity.kind</td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) <span title="@entity.source">@entity.OriginType</span></td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@stage.name (@stage.id)</td>
            <td>@Model.ObserveEnvironment.getIconWidgetType(stage) @stage.type</td>
        </tr>
    </table>
    <pre id="code_@entity.id"><code class="language-javascript">@stage.pipeline</code></pre>
}

<h2 id="Dashboards">@Model.ObserveEnvironment.getIconType(new ObsDashboard()) Dashboard</h2>
<a href="#top">Back to Top</a>

@foreach(ObsStage stage in dashboardStages)
{
    ObsDashboard entity = (ObsDashboard)(stage.Parent);
    <table class="AlternatingRowTable">
        <tr>
            <td><input id="checkboxOPALPreview_@entity.id" type="checkbox" checked="true" value="Show/Hide OPAL" onclick="showOrHideOPALPreview(this, 'code_' + @entity.id)"/> <label for="checkboxOPALPreview_@entity.id">Show/Hide OPAL</label></td>
            <td>@Html.ActionLink("📈 View", "Dashboard", "Details", null, null, stage.id, new { id = entity.id, userid=@Model.CurrentUser.UniqueID, keyword = String.Format("\"{0}\"", @Model.CurrentMetric.name)}, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/dashboard/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">📄 Data</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@stage.name (@stage.id)</td>
            <td>@Model.ObserveEnvironment.getIconWidgetType(stage) @stage.type</td>
        </tr>
    </table>
    <pre id="code_@entity.id"><code class="language-javascript">@stage.pipeline</code></pre>
}

<h2 id="Monitors">@Model.ObserveEnvironment.getIconType(new ObsMonitor()) Monitors (legacy)</h2>
<a href="#top">Back to Top</a>

@foreach(ObsStage stage in monitorStages)
{
    ObsMonitor entity = (ObsMonitor)(stage.Parent);
    <table class="AlternatingRowTable">
        <tr>
            <td><input id="checkboxOPALPreview_@entity.id" type="checkbox" checked="true" value="Show/Hide OPAL" onclick="showOrHideOPALPreview(this, 'code_' + @entity.id)"/> <label for="checkboxOPALPreview_@entity.id">Show/Hide OPAL</label></td>
            <td>@Html.ActionLink("📟 View", "Monitor", "Details", null, null, stage.id, new { id = entity.id, userid=@Model.CurrentUser.UniqueID, keyword = String.Format("\"{0}\"", @Model.CurrentMetric.name)}, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/monitor/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">🛠️ Edit</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@stage.name (@stage.id)</td>
            <td>@Model.ObserveEnvironment.getIconWidgetType(stage) @stage.type</td>
        </tr>
    </table>
    <pre id="code_@entity.id"><code class="language-javascript">@stage.pipeline</code></pre>
}

<h2 id="Monitors2">@Model.ObserveEnvironment.getIconType(new ObsMonitor2()) Monitors v2</h2>
<a href="#top">Back to Top</a>

@foreach(ObsStage stage in monitor2Stages)
{
    ObsMonitor2 entity = (ObsMonitor2)(stage.Parent);
  
    <table class="AlternatingRowTable">
        <tr>
            <td><input id="checkboxOPALPreview_@entity.id" type="checkbox" checked="true" value="Show/Hide OPAL" onclick="showOrHideOPALPreview(this, 'code_' + @entity.id)"/> <label for="checkboxOPALPreview_@entity.id">Show/Hide OPAL</label></td>
            <td>@Html.ActionLink("📱 View", "Monitor2", "Details", null, null, stage.id, new { id = entity.id, userid=@Model.CurrentUser.UniqueID, keyword = String.Format("\"{0}\"", @Model.CurrentMetric.name)}, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/{2}-monitor/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getMonitorv2URLPartType(entity), entity.id)">🛠️ Edit</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@stage.name (@stage.id)</td>
            <td>@Model.ObserveEnvironment.getIconWidgetType(stage) @stage.type</td>
        </tr>
    </table>
    <pre id="code_@entity.id"><code class="language-javascript">@stage.pipeline</code></pre>
}

<h2 id="Worksheets">@Model.ObserveEnvironment.getIconType(new ObsWorksheet()) Worksheets</h2>
<a href="#top">Back to Top</a>

@foreach(ObsStage stage in worksheetStages)
{
    ObsWorksheet entity = (ObsWorksheet)(stage.Parent);
    <table class="AlternatingRowTable">
        <tr>
            <td><input id="checkboxOPALPreview_@entity.id" type="checkbox" checked="true" value="Show/Hide OPAL" onclick="showOrHideOPALPreview(this, 'code_' + @entity.id)"/> <label for="checkboxOPALPreview_@entity.id">Show/Hide OPAL</label></td>
            <td>@Html.ActionLink("📝 View", "Worksheet", "Details", null, null, stage.id, new { id = entity.id, userid=@Model.CurrentUser.UniqueID, keyword = String.Format("\"{0}\"", @Model.CurrentMetric.name)}, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/worksheet/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">📄 Data</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@stage.name (@stage.id)</td>
            <td>@Model.ObserveEnvironment.getIconWidgetType(stage) @stage.type</td>
        </tr>
    </table>
    <pre id="code_@entity.id"><code class="language-javascript">@stage.pipeline</code></pre>
}

<script src="~/js/SearchResults.js" asp-append-version="true"></script>