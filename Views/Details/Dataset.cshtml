@using Observe.EntityExplorer.DataObjects;
@using System.Text;

@model Observe.EntityExplorer.Models.DetailsDatasetViewModel;

@{
    if (@Model.CurrentDataset != null)
    {
        ViewData["Title"] = String.Format("{0} ({1}) Dataset Details", @Model.CurrentDataset.name, @Model.CurrentDataset.id);
    }
}

<p>
    <span class="spanError">@ViewData["ErrorMessage"]</span>
</p>
@if (ViewData["ErrorMessage"] != null)
{
    return;
}

<p>@Html.ActionLink("Back to Home", "Index", "Home", new { userid=@Model.CurrentUser.UniqueID }, null)</p>

<h1>@Model.ObserveEnvironment.getIconType(((ObsCompositeObject)@Model.CurrentDataset)) Dataset Details - @Model.CurrentDataset.name (@Model.CurrentDataset.id)</h1>

<p>
    <a href="#Acceleration">🚄 Acceleration</a> 
    <a href="#RelatedDatasetsAncestors">⏫ Ancestors</a> 
    <a href="#RelatedDatasetsDescendants">⏬ Descendants</a> 
    <a href="#RelatedDatasetsGraph">🔀 Related Datasets Graph</a>
    <a href="#Stages">🏛️ Stages</a>
    <a href="#StagesGraph">⛲ Stages Graph</a>
    <a href="#RelatedDashboards">@Model.ObserveEnvironment.getIconType(new ObsDashboard()) Related Dashboards</a>
    <a href="#RelatedMonitors">@Model.ObserveEnvironment.getIconType(new ObsMonitor()) Related Monitors (legacy)</a>
    <a href="#RelatedMonitors2">@Model.ObserveEnvironment.getIconType(new ObsMonitor2()) Related Monitors</a>
    <a href="#RelatedWorksheets">@Model.ObserveEnvironment.getIconType(new ObsWorksheet()) Related Worksheets</a>
    @if(Model.CurrentDataset.Metrics.Count > 0)
    {
        <a href="#Metrics">@Model.ObserveEnvironment.getIconType(new ObsMetric()) Metrics</a>
    }
</p>

<table>
    <tr>
        <td>Observe</td>
        <td>
            @{
                <a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(@Model.CurrentDataset), @Model.CurrentDataset.id)">📄 Data</a>
                <a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.CurrentDataset.id)">🛠️ Edit</a>
                @Html.ActionLink("💎 OPAL", "DatasetOPALExplorer", "Details", new { id = @Model.CurrentDataset.id, userid=@Model.CurrentUser.UniqueID }, null)
                <a href="@String.Format("https://102.observe-o2.com/workspace/41000009/resource-explorer?datasetId=41007182&filter-customerId={0}&filter-datasetId={1}", @Model.ObserveEnvironment.CustomerName, @Model.CurrentDataset.id)">🅾️ O2 observe/Dataset</a>
            }
        </td>
    </tr>
    <tr>
        <td>Name</td>
        <td>
            @Model.CurrentDataset.name (@Model.CurrentDataset.id) in @Model.CurrentUser.CustomerLabel (@Model.CurrentUser.CustomerName)
        </td>
    </tr>
    <tr>
        <td>Description</td>
        <td>@Model.CurrentDataset.description</td>
    </tr>
    <tr>
        <td>Type</td>
        <td>
            @Model.ObserveEnvironment.getIconType(@Model.CurrentDataset) @Model.CurrentDataset.kind @Model.CurrentDataset.ObjectType
        </td>
    </tr>
    <tr>
        <td>Source</td>
        <td>
            @Model.ObserveEnvironment.getIconOriginType(Model.CurrentDataset) @Model.CurrentDataset.OriginType (@Model.CurrentDataset.source)
        </td>
    </tr>
    <tr>
        <td>Icon</td>
        <td>@Model.CurrentDataset.iconUrl</td>
    </tr>
    <tr>
        <td>Created</td>
        <td>@Model.CurrentDataset.createdDate.ToString("u")/@Model.CurrentDataset.createdBy.label</td>
    </tr>
    <tr>
        <td>Updated</td>
        <td>@Model.CurrentDataset.updatedDate.ToString("u")/@Model.CurrentDataset.updatedBy.label</td>
    </tr>
    <tr>
        <td>Credits</td>
        <td>
            <table>
                <tr>
                    <th>Length</th>
                    <th>Transform</th>
                    <th>Query</th>
                </tr>
                <tr>
                    <td>1 hour</td>
                    <td>@Model.CurrentDataset.Transform1H.Credits.ToString("##0.#")</td>
                    <td>@Model.CurrentDataset.Query1H.Credits.ToString("##0.#")</td>
                </tr>
                <tr>
                    <td>1 day</td>
                    <td>@Model.CurrentDataset.Transform1D.Credits.ToString("##0.#")</td>
                    <td>@Model.CurrentDataset.Query1D.Credits.ToString("##0.#")</td>
                </tr>
                <tr>
                    <td>1 week</td>
                    <td>@Model.CurrentDataset.Transform1W.Credits.ToString("##0.#")</td>
                    <td>@Model.CurrentDataset.Query1W.Credits.ToString("##0.#")</td>
                </tr>
            </table>
        </td>
    </tr>
    @if (@Model.CurrentDataset.Query1HUsers.Count > 0 || @Model.CurrentDataset.Query1DUsers.Count > 0 || @Model.CurrentDataset.Query1WUsers.Count > 0)
    {
        <tr>
            <td>Query Credits</td>
            <td>
                <table class="AlternatingRowTable SortableTable">
                    <thead>
                        <th>User</th>
                        <th>View</th>
                        <th>DashboardID</th>
                        <th>Dashboard</th>
                        <th>1 hour</th>
                        <th>1 day</th>
                        <th>1 week</th>
                    </thead>
                    @foreach(ObsCreditsQuery userQuery in Model.CurrentDataset.Query1WUsers)
                    {
                        ObsCreditsQuery userQuery1H = Model.CurrentDataset.Query1HUsers.Where(q => q.UserName == userQuery.UserName).FirstOrDefault();
                        if (userQuery1H == null)
                        {
                            userQuery1H = new ObsCreditsQuery();
                        }
                        ObsCreditsQuery userQuery1D = Model.CurrentDataset.Query1DUsers.Where(q => q.UserName == userQuery.UserName).FirstOrDefault();
                        if (userQuery1D == null)
                        {
                            userQuery1D = new ObsCreditsQuery();
                        }
                        ObsCreditsQuery userQuery1W = @userQuery;
                        <tr>
                            <td>@userQuery.UserName</td>
                            <td>
                                @if (userQuery.DashboardID.Length > 0)
                                {
                                    @Html.ActionLink("📈 View", "Dashboard", "Details", new { id= userQuery.DashboardID, userid=@Model.CurrentUser.UniqueID }, null)
                                }
                            </td>
                            <td>@userQuery.DashboardID</td>
                            <td>@userQuery.DashboardName</td>
                            <td align="right">@userQuery1H.Credits.ToString("##0.##")</td>
                            <td align="right">@userQuery1D.Credits.ToString("##0.##")</td>
                            <td align="right">@userQuery1W.Credits.ToString("##0.##")</td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
    }
    <tr>
        <td>Important Fields</td>
        <td>
            @if(@Model.CurrentDataset.validFromField.Length > 0) {@Html.Raw(String.Format("From: {0} ", @Model.CurrentDataset.validFromField))} 
            @if(@Model.CurrentDataset.validToField.Length > 0) {@Html.Raw(String.Format("To: {0} ", @Model.CurrentDataset.validToField))} 
            @if(@Model.CurrentDataset.validFromField.Length > 0) {@Html.Raw(String.Format("Label: {0} ", @Model.CurrentDataset.labelField))} 
        </td>
    </tr>    
    <tr>
        <td>Fields (@Model.CurrentDataset.Fields.Count)</td>
        <td>
            <table>
                <tr>
                    <th>Icon</th>
                    <th>Type</th>
                    <th>Name</th>
                    <th>Nullable</th>
                    <th>Enum</th>
                    <th>Searchable</th>
                    <th>Hidden</th>
                    <th>Const</th>
                    <th>Metric</th>
                </tr>
                @foreach (ObsFieldDefinition entity in Model.CurrentDataset.Fields)
                {
                    <tr>
                        <td>@Model.ObserveEnvironment.getIconFieldType(@entity) @if(@Model.CurrentDataset.PrimaryKeys.Count(k => k == entity) > 0) { @Html.Raw("🔑") }</td>
                        <td>@entity.type</td>
                        <td>@entity.name</td>
                        <td>@entity.isNullable</td>
                        <td>@entity.isEnum</td>
                        <td>@entity.isSearchable</td>
                        <td>@entity.isHidden</td>
                        <td>@entity.isConst</td>
                        <td>@entity.isMetric</td>
                    </tr>
                }
            </table>
        </td>
    </tr>
    @* <tr>
        <td>Keys TODO figure out what this means. there is an array of arrays of the columns in here</td>
        <td>
            @foreach (FieldDefinition entity in Model.CurrentDataset.Keys)
            {
                @entity <br/>
            }
        </td>
    </tr> *@  
    @if (Model.CurrentDataset.RelatedKeys.Count > 0)
    {
        @foreach (ObsRelatedKey entity in Model.CurrentDataset.RelatedKeys)
        {
            <tr>
                <td>🧲 Related Key</td>
                <td>
                    <table>
                        <tr>
                            <th>@entity.name</th>
                            <th>To @entity.TargetDataset.name (@entity.TargetDataset.id)</th>
                        </tr>
                        <tr>
                            <td>
                                <table>
                                    @* <tr>
                                        <th>Icon</th>
                                        <th>Type</th>
                                        <th>Name</th>
                                    </tr> *@
                                    @foreach (ObsFieldDefinition entity2 in entity.SourceKeys)
                                    {
                                        <tr>
                                            <td>@Model.ObserveEnvironment.getIconFieldType(@entity2)</td>
                                            <td>@entity2.type</td>
                                            <td>@entity2.name</td>
                                        </tr>
                                    }
                                </table>
                            </td>
                            <td>
                                <table>
                                    @* <tr>
                                        <th>Icon</th>
                                        <th>Type</th>
                                        <th>Name</th>
                                    </tr> *@
                                    @foreach (ObsFieldDefinition entity3 in entity.TargetKeys)
                                    {
                                        <tr>
                                            <td>@Model.ObserveEnvironment.getIconFieldType(@entity3)</td>
                                            <td>@entity3.type</td>
                                            <td>@entity3.name</td>
                                        </tr>
                                    }
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        }
    }
    @if (Model.CurrentDataset.ForeignKeys.Count > 0)
    {
        @foreach (ObsRelatedKey entity in Model.CurrentDataset.ForeignKeys)
        {
            <tr>
                <td>🔐 Foreign Key</td>
                <td>
                    <table>
                        <tr>
                            <th>@entity.name</th>
                            <th>To @entity.TargetDataset.name (@entity.TargetDataset.id)</th>
                        </tr>
                        <tr>
                            <td>
                                <table>
                                    @* <tr>
                                        <th>Icon</th>
                                        <th>Type</th>
                                        <th>Name</th>
                                    </tr> *@
                                    @foreach (ObsFieldDefinition entity2 in entity.SourceKeys)
                                    {
                                        <tr>
                                            <td>@Model.ObserveEnvironment.getIconFieldType(@entity2)</td>
                                            <td>@entity2.type</td>
                                            <td>@entity2.name</td>
                                        </tr>
                                    }
                                </table>
                            </td>
                            <td>
                                <table>
                                    @* <tr>
                                        <th>Icon</th>
                                        <th>Type</th>
                                        <th>Name</th>
                                    </tr> *@
                                    @foreach (ObsFieldDefinition entity3 in entity.TargetKeys)
                                    {
                                        <tr>
                                            <td>@Model.ObserveEnvironment.getIconFieldType(@entity3)</td>
                                            <td>@entity3.type</td>
                                            <td>@entity3.name</td>
                                        </tr>
                                    }
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        }
    }
</table>
 
<h2 id="Acceleration">🚄 Acceleration</h2>
<a href="#top">Back to Top</a>

<table>
    <tr>
        <td>State</td>
        <td>@Model.CurrentDataset.Acceleration.state</td>
        <td></td>
    </tr>
    <tr>
        <td>Always Accelerated</td>
        <td>@Model.CurrentDataset.Acceleration.alwaysAccelerated</td>
        <td>Whether the dataset is "always accelerated", i.e., any query should hit accelerated data.</td>
    </tr>
    <tr>
        <td>Staleness Configured</td>
        <td style="text-align: right">@Model.CurrentDataset.Acceleration.StalenessConfigured</td>
        <td>Configured staleness target of the dataset.</td>
    </tr>
    <tr>
        <td>Staleness Effective</td>
        <td style="text-align: right">@Model.CurrentDataset.Acceleration.StalenessEffective</td>
        <td>The target staleness of this dataset when taking downstream datasets.</td>
    </tr>
    <tr>
        <td>Staleness Target</td>
        <td style="text-align: right">@Model.CurrentDataset.Acceleration.StalenessTarget</td>
        <td>The actual staleness target of the dataset.</td>
    </tr>
    <tr>
        <td>Staleness Downstream</td>
        <td style="text-align: right">@Model.CurrentDataset.Acceleration.StalenessDownstream</td>
        <td>The minimum configured target staleness across all datasets downstream of this dataset.</td>
    </tr>
    <tr>
        <td>Staleness Actual</td>
        <td style="text-align: right">@Model.CurrentDataset.Acceleration.StalenessActual</td>
        <td>Staleness of the dataset (averaged over some moving window).</td>
    </tr>
    <tr>
        <td>EffectiveOnDemandMaterializationLength</td>
        <td style="text-align: right">@Model.CurrentDataset.Acceleration.EffectiveOnDemandMaterializationLength</td>
        <td>How far back users can request backfill.</td>
    </tr>
    @foreach (ObsTimeRange timeRange in Model.CurrentDataset.Acceleration.AcceleratedRanges)
    {
        <tr>
            <td>Actual AcceleratedRange</td>
            <td style="text-align: right">@timeRange.duration</td>
            <td>@timeRange.start.ToString("u") - @timeRange.end.ToString("u")</td>
        </tr>
    }
    @foreach (ObsTimeRange timeRange in Model.CurrentDataset.Acceleration.AcceleratedRangesTarget)
    {
        <tr>
            <td>Target AcceleratedRange</td>
            <td style="text-align: right">@timeRange.duration</td>
            <td>@timeRange.start.ToString("u") - @timeRange.end.ToString("u")</td>
        </tr>
    }
    <tr>
        <td>Raw</td>
        <td colspan="2"><pre><code class="language-json">@Model.CurrentDataset.AccelerationInfo</code></pre></td>
    </tr>
    @{
        List<ObjectRelationship> downstreamDatasetRelationships = Model.CurrentDataset.Acceleration.ExternalObjectRelationships.Where(r => r.ThisObject is ObsDataset).ToList();
        if (downstreamDatasetRelationships.Count > 0)
        {        
            List<ObsObject> downstreamDatasets = downstreamDatasetRelationships.Select(d => d.ThisObject).ToList();
            <tr>
                <td>Downstream datasets affecting acceleration settings</td>
                <td colspan="2">
                    <table class="AlternatingRowTable">
                        <thead>
                            <th>View</th>
                            <th>Data</th>
                            <th>Edit</th>
                            <th>Type</th>
                            <th>Origin</th>
                            <th>ID</th>
                            <th>Name</th>
                        </thead>
                        @foreach (ObsObject entityObject in downstreamDatasets)
                        {
                            ObsDataset entityRelated = (ObsDataset)entityObject;
                            <tr>
                                <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityRelated.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                                <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityRelated), entityRelated.id)">📄 Data</a></td>
                                <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityRelated.id)">🛠️ Edit</a></td>
                                <td>@Model.ObserveEnvironment.getIconType(entityRelated) @entityRelated.kind</td>
                                <td>@Model.ObserveEnvironment.getIconOriginType(entityRelated) <span title="@entityRelated.source">@entityRelated.OriginType</span></td>
                                <td>@entityRelated.id</td>
                                <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                            </tr>
                        }
                    </table>
                </td>
            </tr>            
        }
    }
    @{
        List<ObjectRelationship> downstreamMonitorRelationships = Model.CurrentDataset.Acceleration.ExternalObjectRelationships.Where(r => r.ThisObject is ObsMonitor).ToList();
        if (downstreamMonitorRelationships.Count > 0)
        {        
            List<ObsObject> downstreamMonitors = downstreamMonitorRelationships.Select(d => d.ThisObject).ToList();
            <tr>
                <td>Downstream monitors affecting acceleration settings</td>
                <td colspan="2">
                    <table class="AlternatingRowTable">
                        <thead>
                            <th>View</th>
                            <th>Notif.</th>
                            <th>Edit</th>
                            <th>Type</th>
                            <th>Origin</th>
                            <th>ID</th>
                            <th>Name</th>
                        </thead>
                        @foreach (ObsObject entityObject in downstreamMonitors)
                        {
                            ObsMonitor entity = (ObsMonitor)entityObject;
                            <tr>
                                <td>@Html.ActionLink("📟 View", "Monitor", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                                <td><a href="@String.Format("{0}workspace/{1}/notification/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, Convert.ToBase64String(Encoding.UTF8.GetBytes(String.Format("{{\"monitorId\":\"{0}\"}}", entity.id))))">📄 Notif.</a></td>
                                <td><a href="@String.Format("{0}workspace/{1}/monitor/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">🛠️ Edit</a></td>
                                <td>@entity.kind</td>
                                <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
                                <td>@entity.id</td>
                                <td>@entity.name</td>
                            </tr>
                        }
                    </table>
                </td>
            </tr>            
        }
    }
</table>

<h2 id="RelatedDatasetsAncestors">⏫ Ancestors</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> ancestorRelationships = Model.ObserveEnvironment.GetAllAncestorRelationshipsOfThis(@Model.CurrentDataset);
    if (ancestorRelationships.Count > 0)
    {
        <table class="AlternatingRowTable SortableTable">
            <thead>
                <th>View</th>
                <th>Data</th>
                <th>Edit</th>
                <th>Type</th>
                <th>Origin</th>
                <th>ID</th>
                <th>Name</th>
                <th>Relationship</th>
                <th>Details</th>
                <th>View</th>
                <th>Edit</th>
                <th>Type</th>
                <th>Origin</th>
                <th>ID</th>
                <th>Name</th>
                <th>Direct</th>
            </thead>
            <tbody>
            @foreach (ObjectRelationship objectRelationship in ancestorRelationships)
            {
                if (objectRelationship.ThisObject is ObsDataset && objectRelationship.RelatedObject is ObsDataset)
                {
                    ObsDataset entityThis = (ObsDataset)objectRelationship.ThisObject;
                    ObsDataset entityRelated = (ObsDataset)objectRelationship.RelatedObject;
                    
                    <tr>
                        <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityRelated.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityRelated), entityRelated.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityRelated.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityRelated) @entityRelated.kind</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityRelated) <span title="@entityRelated.source">@entityRelated.OriginType</span></td>
                        <td>@entityRelated.id</td>
                        <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                        <td>@objectRelationship.RelationshipType</td>
                        <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityThis.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityThis), entityThis.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityThis.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityThis) @entityThis.kind</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityThis) <span title="@entityThis.source">@entityThis.OriginType</span></td>
                        <td>@entityThis.id</td>
                        <td><span title="@entityThis.description">@entityThis.name</span></td>
                        <td>@if(@entityThis == @Model.CurrentDataset) { @Html.Raw("✨") }</td>
                    </tr>
                }
                else if (objectRelationship.ThisObject is ObsDataset && objectRelationship.RelatedObject is ObsDatastream)
                {
                    ObsDataset entityThis = (ObsDataset)objectRelationship.ThisObject;
                    ObsDatastream entityRelated = (ObsDatastream)objectRelationship.RelatedObject;

                    <tr>
                        <td>@Html.ActionLink("🌊 View", "Datastream", "Select", String.Empty, String.Empty, "Datastreams", new { userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityRelated.DatastreamDataset), entityRelated.DatastreamDataset.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/datastreams/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityRelated.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityRelated) Datastream</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityRelated) <span title="@entityRelated.source">@entityRelated.OriginType</span></td>
                        <td>@entityRelated.id</td>
                        <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                        <td>@objectRelationship.RelationshipType</td>
                        <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityThis.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityThis), entityThis.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityThis.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityThis) @entityThis.kind</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityThis) <span title="@entityThis.source">@entityThis.OriginType</span></td>
                        <td>@entityThis.id</td>
                        <td><span title="@entityThis.description">@entityThis.name</span></td>
                        <td>@if(@entityThis == @Model.CurrentDataset) { @Html.Raw("✨") }</td>
                    </tr>
                }
                else if (objectRelationship.ThisObject is ObsDatastream && objectRelationship.RelatedObject is ObsToken)
                {
                    ObsDatastream entityThis = (ObsDatastream)objectRelationship.ThisObject;
                    ObsToken entityRelated = (ObsToken)objectRelationship.RelatedObject;

                    <tr>
                        <td>@Html.ActionLink("🎟️ View", "Datastream", "Select", String.Empty, String.Empty, "Tokens", new { userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}?filter-DATASTREAM_TOKEN_ID={4}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(((ObsDatastream)(entityRelated.Parent)).DatastreamDataset), ((ObsDatastream)(entityRelated.Parent)).DatastreamDataset.id, entityRelated.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/datastreams/{2}/{3}/{4}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityRelated.Parent.id, entityRelated.kind, entityRelated.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityRelated) @entityRelated.kind</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityRelated) <span title="@entityRelated.source">@entityRelated.OriginType</span></td>
                        <td>@entityRelated.id</td>
                        <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                        <td>@objectRelationship.RelationshipType</td>
                        <td>@Html.ActionLink("🌊 View", "Datastream", "Select", String.Empty, String.Empty, "Datastreams", new { userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityThis.DatastreamDataset), entityThis.DatastreamDataset.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/datastreams/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityThis.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityThis) Datastream</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityThis) <span title="@entityThis.source">@entityThis.OriginType</span></td>
                        <td>@entityThis.id</td>
                        <td><span title="@entityThis.description">@entityThis.name</span></td>
                        <td>&nbsp;</td>
                    </tr>
                }
            }
            </tbody>
        </table>
    }
}

<h2 id="RelatedDatasetsDescendants">⏬ Descendants</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> descendantRelationships = Model.ObserveEnvironment.GetAllDescendantRelationshipsOfRelated(@Model.CurrentDataset);
    if (descendantRelationships.Count > 0)
    {
        <table class="AlternatingRowTable SortableTable">
            <thead>
                <th>View</th>
                <th>Data</th>
                <th>Edit</th>
                <th>Type</th>
                <th>Origin</th>
                <th>ID</th>
                <th>Name</th>
                <th>Relationship</th>
                <th>Details</th>
                <th>View</th>
                <th>Edit</th>
                <th>Type</th>
                <th>Origin</th>
                <th>ID</th>
                <th>Name</th>
                <th>Direct</th>
            </thead>
            <tbody>
            @foreach (ObjectRelationship objectRelationship in descendantRelationships)
            {
                if (objectRelationship.ThisObject is ObsDataset && objectRelationship.RelatedObject is ObsDataset)
                {
                    ObsDataset entityThis = (ObsDataset)objectRelationship.ThisObject;
                    ObsDataset entityRelated = (ObsDataset)objectRelationship.RelatedObject;
                    
                    <tr>
                        <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityRelated.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityRelated), entityRelated.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityRelated.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityRelated) @entityRelated.kind</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityRelated) <span title="@entityRelated.source">@entityRelated.OriginType</span></td>
                        <td>@entityRelated.id</td>
                        <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                        <td>@objectRelationship.RelationshipType</td>
                        <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityThis.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                        <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityThis), entityThis.id)">📄 Data</a></td>
                        <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityThis.id)">🛠️ Edit</a></td>
                        <td>@Model.ObserveEnvironment.getIconType(entityThis) @entityThis.kind</td>
                        <td>@Model.ObserveEnvironment.getIconOriginType(entityThis) <span title="@entityThis.source">@entityThis.OriginType</span></td>
                        <td>@entityThis.id</td>
                        <td><span title="@entityThis.description">@entityThis.name</span></td>
                        <td>@if(@entityRelated == @Model.CurrentDataset) { @Html.Raw("✨") }</td>
                    </tr>
                }
            }
            </tbody>
        </table>
    }
}

<h2 id="RelatedDatasetsGraph">🔀 Related Datasets Graph</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> allRelationships = new List<ObjectRelationship>(ancestorRelationships.Count + descendantRelationships.Count);
    allRelationships.AddRange(ancestorRelationships);
    allRelationships.AddRange(descendantRelationships);
    allRelationships.AddRange(@Model.CurrentDataset.StageObjectRelationships);
    allRelationships = allRelationships.OrderBy(r => r.ToString()).ToList();
    <p>
        <textarea id="textArea_RelatedDatasetsGraph" style="width:400px;height:200px;">@Model.ObserveEnvironment.RenderGraphOfRelationships(@Model.CurrentDataset, allRelationships)</textarea>
        <br/>
        <button id="buttonVisualize_RelatedDatasetsGraph" onclick="goToGraphVizOnline('textArea_RelatedDatasetsGraph')">🔭 View</button>
    </p>
}

<h2 id="Stages">🏛️ Stages</h2>
<a href="#top">Back to Top</a>

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>Details</th>
        <th>Type</th>
        <th>Name</th>
        <th>ID</th>
        <th>Uses</th>
        <th>Used By</th>
    </thead>
    @foreach (ObsStage entity in Model.CurrentDataset.Stages)
    {    
        <tr>
            <td><a href="@String.Format("#{0}", entity.id)">🏛️ Details</a></td>
            <td>
                @Model.ObserveEnvironment.getIconWidgetType(entity) @entity.type
                @if (@entity == Model.CurrentDataset.OutputStage)
                {
                    @Html.Raw("🏁 OUTPUT");
                }
            </td>
            <td>@entity.name</td>
            <td>@entity.id</td>
            <td>
                @{
                    List<ObjectRelationship> entityRelationshipsSource = entity.ExternalObjectRelationships;

                    List<ObjectRelationship> entityDatasetDataRelationshipsSource = entityRelationshipsSource.Where(r => r.RelatedObject is ObsDataset && r.RelationshipType == ObsObjectRelationshipType.ProvidesData).ToList();
                    if (entityDatasetDataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Data>This: {0} <br/>", entityDatasetDataRelationshipsSource.Count));
                    }
                    List<ObjectRelationship> entityDatasetLinkRelationshipsSource = entityRelationshipsSource.Where(r => r.RelatedObject is ObsDataset && r.RelationshipType == ObsObjectRelationshipType.Linked).ToList();
                    if (entityDatasetLinkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Link>This {0} <br/>", entityDatasetLinkRelationshipsSource.Count))
                    }
                    List<ObjectRelationship> entityStageDataRelationshipsSource = entityRelationshipsSource.Where(r => r.RelatedObject is ObsStage && r.RelationshipType == ObsObjectRelationshipType.ProvidesData).ToList();
                    if (entityStageDataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Stage>Data>This: {0} <br/>", entityStageDataRelationshipsSource.Count));
                    }
                    List<ObjectRelationship> entityStageLinkRelationshipsSource = entityRelationshipsSource.Where(r => r.RelatedObject is ObsStage && r.RelationshipType == ObsObjectRelationshipType.Linked).ToList();
                    if (entityStageLinkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Stage>Link>This {0} ", entityStageLinkRelationshipsSource.Count))
                    }
                }
            </td>
            <td>
                @{
                    List<ObjectRelationship> entityRelationshipsTarget = Model.CurrentDataset.GetRelationshipsOfRelated(entity);

                    List<ObjectRelationship> entityDataRelationshipsTarget = entityRelationshipsTarget.Where(r => r.RelationshipType == ObsObjectRelationshipType.ProvidesData).ToList();
                    if (entityDataRelationshipsTarget.Count > 0)
                    {
                        @Html.Raw(String.Format("📝This>Data: {0} <br/>", entityDataRelationshipsTarget.Count));
                    }
                    List<ObjectRelationship> entityLinkRelationshipsTarget = entityRelationshipsTarget.Where(r => r.RelationshipType == ObsObjectRelationshipType.Linked).ToList();
                    if (entityLinkRelationshipsTarget.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗This>Link {0} ", entityLinkRelationshipsTarget.Count))
                    }
                }                
            </td>
        </tr>
    }
</table>

<p>
<input id="checkboxDashboardInputsOutputTables" type="checkbox" checked="true" value="Show/Hide Image Preview" onclick="showOrHideDashboardInputsOutputTables(this)"/>
<label for="checkboxDashboardInputsOutputTables">Show/Hide input and output tables</label>
</p>

<table>
    @foreach (ObsStage entity in Model.CurrentDataset.Stages)
    {
        <tr id="@entity.id">
            <td>Stage</td>
            <td>
                @entity.name (@entity.id)
                @Model.ObserveEnvironment.getIconWidgetType(entity) @entity.type
                @if(@entity.visible)
                {
                    @Html.Raw("👁️ visible")
                }
                else 
                {
                    @Html.Raw("🙈 hidden")
                }
                <a href="#Stages">Back to Stages</a>
                <a href="#top">Back to Top</a>
            </td>
        </tr>
        <tr id="stage_table_input_@entity.id">
            <td>⏫ Inputs</td>
            <td>
                <table class="AlternatingRowTable">
                    <thead>
                        <th>Details</th>
                        <th>View</th>
                        <th>Edit</th>
                        <th>Type</th>
                        <th>Origin</th>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Relationship</th>
                        <th>Ref Name</th>
                    </thead>
                    @foreach (ObjectRelationship objectRelationship in entity.ExternalObjectRelationships)
                    {
                        if (objectRelationship.RelatedObject is ObsDataset)
                        {
                            ObsDataset entityRelated = (ObsDataset)objectRelationship.RelatedObject;

                            <tr>
                                <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entityRelated.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                                <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entityRelated), entityRelated.id)">📄 Data</a></td>
                                <td><a href="@String.Format("{0}workspace/{1}/definition/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entityRelated.id)">🛠️ Edit</a></td>
                                <td>@Model.ObserveEnvironment.getIconType(entityRelated) @entityRelated.kind</td>
                                <td>@Model.ObserveEnvironment.getIconOriginType(entityRelated) <span title="@entityRelated.source">@entityRelated.OriginType</span></td>
                                <td>@entityRelated.id</td>
                                <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                                <td>@objectRelationship.RelationshipType</td>
                                <td>@objectRelationship.name</td>
                            </tr>
                        }
                        else if (objectRelationship.RelatedObject is ObsStage)
                        {
                            ObsStage entityRelated = (ObsStage)objectRelationship.RelatedObject;
                            
                            <tr>
                                <td><a href="@String.Format("#{0}", entityRelated.id)">🏛️ Details</a></td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>🏛️ Stage</td>
                                <td>👋 User</td>
                                <td>@entityRelated.id</td>
                                <td><span title="@entityRelated.description">@entityRelated.name</span></td>
                                <td>@objectRelationship.RelationshipType</td>
                                <td>@objectRelationship.name</td>
                            </tr>
                        }
                    }
                    @foreach (ObsMetric metric in entity.Metrics)
                    {
                        <tr>
                            <td>@Html.ActionLink("📶 View", "Metric", "Details", new { id=Convert.ToBase64String(Encoding.UTF8.GetBytes(metric.id)), userid=@Model.CurrentUser.UniqueID }, null)</td>
                            <td><a href="@String.Format("{0}workspace/{1}/metric-explorer?datasetId={2}&metricName={3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, metric.datasetId, metric.name)">📄 Data</a></td>
                            <td>&nbsp;</td>
                            <td>@Model.ObserveEnvironment.getIconType(new ObsMetric()) Metric</td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                            <td>@metric.name</td>
                            <td>Used</td>
                            <td>&nbsp;</td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
        List<ObjectRelationship> relationshipsTarget = Model.CurrentDataset.GetRelationshipsOfRelated(entity);
        if (relationshipsTarget.Count > 0)
        {
            <tr id="stage_table_output_@entity.id">
                <td>⏬ Used By</td>
                <td>
                    <table class="AlternatingRowTable">
                        <tr>
                            <th>Details</th>
                            <th>Type</th>
                            <th>Origin</th>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Relationship</th>
                            <th>Ref Name</th>
                        </tr>                        
                        @foreach (ObjectRelationship objectRelationship in relationshipsTarget)
                        {
                            ObsStage entityRelated= (ObsStage)objectRelationship.RelatedObject;
                            
                            if (objectRelationship.ThisObject is ObsDataset)
                            {
                                // This should not happen in Stages
                                ObsDataset entityThis = (ObsDataset)objectRelationship.ThisObject;

                                <tr>
                                    <td>@entityThis</td>
                                </tr>
                            }
                            else if (objectRelationship.ThisObject is ObsStage)
                            {
                                ObsStage entityThis = (ObsStage)objectRelationship.ThisObject;
                                
                                <tr>
                                    <td><a href="@String.Format("#{0}", entityThis.id)">🏛️ Details</a></td>
                                    <td>🏛️ Stage</td>
                                    <td>👋 User</td>
                                    <td>@entityRelated.id</td>
                                    <td><span title="@entityThis.description">@entityThis.name</span></td>
                                    <td>@objectRelationship.RelationshipType</td>
                                    <td>@objectRelationship.name</td>
                                </tr>                                
                            }
                        }
                    </table>
                </td>
            </tr>
        }
        <tr>
            <td colspan="2"><pre><code class="language-javascript">@entity.pipeline</code></pre></td>
        </tr>
    }
</table>

<h2 id="StagesGraph">⛲ Stages Graph</h2>
<a href="#top">Back to Top</a>

<p>
    <textarea id="textArea_StagesGraph" style="width:400px;height:200px;">@Model.ObserveEnvironment.RenderGraphOfRelationships(@Model.CurrentDataset, @Model.CurrentDataset.StageObjectRelationships)</textarea>
    <br/>
    <button id="buttonVisualize_textArea_StagesGraph" onclick="goToGraphVizOnline('textArea_StagesGraph')">🔭 View</button>
</p>

<h2 id="RelatedDashboards">@Model.ObserveEnvironment.getIconType(new ObsDashboard()) Related Dashboards</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> dataRelationshipsTarget = Model.ObserveEnvironment.GetRelationshipsOfRelated(@Model.CurrentDataset, ObsObjectRelationshipType.ProvidesData);
    List<ObjectRelationship> linkRelationshipsTarget = Model.ObserveEnvironment.GetRelationshipsOfRelated(@Model.CurrentDataset, ObsObjectRelationshipType.Linked);
    List<ObjectRelationship> dashboardRelationshipsData = dataRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Dashboard) == ObsCompositeObjectType.Dashboard).ToList();
    List<ObjectRelationship> dashboardRelationshipsLink = linkRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Dashboard) == ObsCompositeObjectType.Dashboard).ToList();
    List<ObjectRelationship> dashboardsRelationshipsAll = new List<ObjectRelationship>(dashboardRelationshipsData.Count + dashboardRelationshipsLink.Count);
    dashboardsRelationshipsAll.AddRange(dashboardRelationshipsData);
    dashboardsRelationshipsAll.AddRange(dashboardRelationshipsLink);

    List<ObsObject> selectedDashboards = dashboardsRelationshipsAll.Select(d => d.ThisObject).ToList();
}

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>View</th>
        <th>Data</th>
        <th>Edit</th>
        <th>Origin</th>
        <th>ID</th>
        <th>Name</th>
        <th>Sections</th>
        <th>Widgets</th>
        <th>Stages</th>
        <th>Parameters</th>
        <th>Uses</th>
        <th>Created</th>
        <th>Updated</th>
        <th>Query 1h</th>
        <th>Query 1d</th>
        <th>Query 1w</th>
    </thead>
    <tbody>
    @foreach (ObsDashboard entity in selectedDashboards)
    {
        <tr id="tableRowDashboard_@entity.id">
            <td>@Html.ActionLink("📈 View", "Dashboard", "Details", new { id= entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/dashboard/{2}",           @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">📄 Data</a></td>
            <td><a href="@String.Format("{0}workspace/{1}/dashboard/{2}?edit=true", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">🛠️ Edit</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@entity.NumSections</td>
            <td>@entity.NumWidgets</td>
            <td>@entity.NumStages</td>
            <td>@entity.NumParameters</td>
            <td>
                @{
                    List<ObjectRelationship> dataRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.ProvidesData);
                    if (dataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Data>This: {0} <br/>", dataRelationshipsSource.Count));
                    }

                    List<ObjectRelationship> linkRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.Linked);
                    if (linkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Link>This: {0} <br/>", linkRelationshipsSource.Count))
                    }
                }
            </td>          
            <td>@entity.createdDate.ToString("u")/@entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/@entity.updatedBy.label</td>
            <td>@entity.Query1H.Credits.ToString("##0.#")</td>
            <td>@entity.Query1D.Credits.ToString("##0.#")</td>
            <td>@entity.Query1W.Credits.ToString("##0.#")</td>
        </tr>
    }
    </tbody>
</table>

<h2 id="RelatedMonitors">@Model.ObserveEnvironment.getIconType(new ObsMonitor()) Related Monitors (Legacy)</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> monitorRelationshipsData = dataRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Monitor) == ObsCompositeObjectType.Monitor).ToList();
    List<ObjectRelationship> monitorRelationshipsLink = linkRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Monitor) == ObsCompositeObjectType.Monitor).ToList();
    List<ObjectRelationship> monitorsRelationshipsAll = new List<ObjectRelationship>(monitorRelationshipsData.Count + monitorRelationshipsLink.Count);
    monitorsRelationshipsAll.AddRange(monitorRelationshipsData);
    monitorsRelationshipsAll.AddRange(monitorRelationshipsLink);

    List<ObsObject> selectedMonitors = monitorsRelationshipsAll.Select(d => d.ThisObject).ToList();
}

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>View</th>
        <th>Notif.</th>
        <th>Edit</th>
        <th>Type</th>
        <th>Origin</th>
        <th>ID</th>
        <th>Name</th>
        <th>Comm.</th>
        <th>Enabled</th>
        <th>Actions</th>
        <th>Stages</th>
        <th>Uses</th>
        <th>Created</th>
        <th>Updated</th>
        <th>Transform 1h</th>
        <th>Transform 1d</th>
        <th>Transform 1w</th>
        <th>Acc Conf.</th>
        <th>Acc Eff.</th>
        <th>Acc Actl.</th>
        <th>Acc Range</th>
    </thead>
    <tbody>
    @foreach (ObsMonitor entity in selectedMonitors)
    {
        <tr id="tableRowMonitor_@entity.id">
            <td>@Html.ActionLink("📟 View", "Monitor", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/notification/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, Convert.ToBase64String(Encoding.UTF8.GetBytes(String.Format("{{\"monitorId\":\"{0}\"}}", entity.id))))">📄 Notif.</a></td>
            <td><a href="@String.Format("{0}workspace/{1}/monitor/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">🛠️ Edit</a></td>
            <td>@entity.kind</td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>
                @if (entity.comment.Length > 0)
                {
                    <span title="@entity.comment">🧾</span> 
                }
            </td>
            <td>@Model.ObserveEnvironment.getIconEnabled(entity) @entity.IsEnabled</td>
            <td>@entity.NumActions</td>
            <td>@entity.NumStages</td>
            <td>
                @{
                    List<ObjectRelationship> dataRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.ProvidesData);
                    if (dataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Data>This: {0} <br/>", dataRelationshipsSource.Count));
                    }

                    List<ObjectRelationship> linkRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.Linked);
                    if (linkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Link>This: {0} <br/>", linkRelationshipsSource.Count))
                    }
                }
            </td>            
            <td>@entity.createdDate.ToString("u")/@entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/@entity.updatedBy.label</td>
            <td>@entity.Transform1H.Credits.ToString("##0.#")</td>
            <td>@entity.Transform1D.Credits.ToString("##0.#")</td>
            <td>@entity.Transform1W.Credits.ToString("##0.#")</td>
            <td><span title="Configured staleness target of the dataset">@entity.Acceleration.StalenessConfigured</span></td>
            <td>
                @{
                    string highlightClass = "";
                    if (entity.Acceleration.StalenessEffective < entity.Acceleration.StalenessConfigured)
                    {
                        highlightClass = "accelSettingDifferent";
                    }
                }
                <span title="The target staleness of this dataset when taking downstream datasets" class="@highlightClass">@entity.Acceleration.StalenessEffective</span>
            </td>
            <td><span title="Staleness of the dataset (averaged over some moving window)">@entity.Acceleration.StalenessActual</span></td>
            <td>
                @foreach (ObsTimeRange timeRange in @entity.Acceleration.AcceleratedRanges)
                {
                    <span title="@timeRange.start.ToString("u") - @timeRange.end.ToString("u")">@timeRange.duration</span>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<h2 id="RelatedMonitors2">@Model.ObserveEnvironment.getIconType(new ObsMonitor2()) Related Monitors</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> monitor2RelationshipsData = dataRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Monitor2) == ObsCompositeObjectType.Monitor2).ToList();
    List<ObjectRelationship> monitor2RelationshipsLink = linkRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Monitor2) == ObsCompositeObjectType.Monitor2).ToList();
    List<ObjectRelationship> monitors2RelationshipsAll = new List<ObjectRelationship>(monitor2RelationshipsData.Count + monitor2RelationshipsLink.Count);
    monitors2RelationshipsAll.AddRange(monitor2RelationshipsData);
    monitors2RelationshipsAll.AddRange(monitor2RelationshipsLink);

    List<ObsObject> selectedMonitors2 = monitors2RelationshipsAll.Select(d => d.ThisObject).ToList();
}

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>View</th>
        <th>Edit</th>
        <th>Type</th>
        <th>Origin</th>
        <th>ID</th>
        <th>Name</th>
        <th>Comm.</th>
        <th>Enabled</th>
        <th>Actions</th>
        <th>Stages</th>
        <th>Uses</th>
        <th>Created</th>
        <th>Updated</th>
        <th>Transform 1h</th>
        <th>Transform 1d</th>
        <th>Transform 1w</th>
        <th>Acc Conf.</th>
        <th>Acc Eff.</th>
        <th>Acc Actl.</th>
        <th>Acc Range</th>
    </thead>
    <tbody>
    @foreach (ObsMonitor2 entity in selectedMonitors2)
    {
        <tr id="tableRowMonitor_@entity.id">
            <td>@Html.ActionLink("📱 View", "Monitor2", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/{2}-monitor/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getMonitorv2URLPartType(entity), entity.id)">🛠️ Edit</a></td>
            <td>@entity.kind</td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>
                @if (entity.description.Length > 0)
                {
                    <span title="@entity.description">🧾</span> 
                }
            </td>
            <td>@Model.ObserveEnvironment.getIconEnabled(entity) @entity.IsEnabled</td>
            <td>@entity.NumActions</td>
            <td>@entity.NumStages</td>
            <td>
                @{
                    List<ObjectRelationship> dataRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.ProvidesData);
                    if (dataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Data>This: {0} <br/>", dataRelationshipsSource.Count));
                    }

                    List<ObjectRelationship> linkRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.Linked);
                    if (linkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Link>This: {0} <br/>", linkRelationshipsSource.Count))
                    }
                }
            </td>            
            <td>@entity.createdDate.ToString("u")/@entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/@entity.updatedBy.label</td>
            <td>@entity.Transform1H.Credits.ToString("##0.#")</td>
            <td>@entity.Transform1D.Credits.ToString("##0.#")</td>
            <td>@entity.Transform1W.Credits.ToString("##0.#")</td>
            <td>
                @if(entity.SupportingDataset != null)
                {
                    <span title="Configured staleness target of the dataset">@entity.SupportingDataset.Acceleration.StalenessConfigured</span>
                }
            </td>
            <td>
                @if(entity.SupportingDataset != null)
                {
                    string highlightClass = "";
                    if (entity.SupportingDataset.Acceleration.StalenessEffective < entity.SupportingDataset.Acceleration.StalenessConfigured)
                    {
                        highlightClass = "accelSettingDifferent";
                    }
                    <span title="The target staleness of this dataset when taking downstream datasets" class="@highlightClass">@entity.SupportingDataset.Acceleration.StalenessEffective</span>
                }
            </td>
            <td>
                @if(entity.SupportingDataset != null)
                {
                    <span title="Staleness of the dataset (averaged over some moving window)">@entity.SupportingDataset.Acceleration.StalenessActual</span>
                }
            </td>
            <td>
                @if(entity.SupportingDataset != null)
                {
                    @foreach (ObsTimeRange timeRange in @entity.SupportingDataset.Acceleration.AcceleratedRanges)
                    {
                        <span title="@timeRange.start.ToString("u") - @timeRange.end.ToString("u")">@timeRange.duration</span>
                    }
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<h2 id="RelatedWorksheets">@Model.ObserveEnvironment.getIconType(new ObsWorksheet()) Related Worksheets</h2>
<a href="#top">Back to Top</a>

@{
    List<ObjectRelationship> worksheetRelationshipsData = dataRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Worksheet) == ObsCompositeObjectType.Worksheet).ToList();
    List<ObjectRelationship> worksheetRelationshipsLink = linkRelationshipsTarget.Where(r => (((ObsCompositeObject)r.ThisObject).ObjectType & ObsCompositeObjectType.Worksheet) == ObsCompositeObjectType.Worksheet).ToList();
    List<ObjectRelationship> worksheetsRelationshipsAll = new List<ObjectRelationship>(worksheetRelationshipsData.Count + worksheetRelationshipsLink.Count);
    worksheetsRelationshipsAll.AddRange(worksheetRelationshipsData);
    worksheetsRelationshipsAll.AddRange(worksheetRelationshipsLink);

    List<ObsObject> selectedWorksheets = worksheetsRelationshipsAll.Select(d => d.ThisObject).ToList();
}

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>View</th>
        <th>Data</th>
        <th>Origin</th>
        <th>ID</th>
        <th>Name</th>
        <th>Stages</th>
        <th>Params</th>
        <th>Uses</th>
        <th>Created</th>
        <th>Updated</th>
    </thead>
    <tbody>
    @foreach (ObsWorksheet entity in selectedWorksheets)
    {
        <tr id="tableRowWorksheet_@entity.id">
            <td>@Html.ActionLink("📝 View", "Worksheet", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/worksheet/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">📄 Data</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@entity.NumStages</td>
            <td>@entity.NumParameters</td>
            <td>
                @{
                    List<ObjectRelationship> dataRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.ProvidesData);
                    if (dataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Data>This: {0} <br/>", dataRelationshipsSource.Count));
                    }

                    List<ObjectRelationship> linkRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.Linked);
                    if (linkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Link>This: {0} <br/>", linkRelationshipsSource.Count))
                    }
                }
            </td>            
            <td>@entity.createdDate.ToString("u")/@entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/@entity.updatedBy.label</td>
        </tr>
    }
    </tbody>
</table>

@if(Model.CurrentDataset.Metrics.Count > 0)
{
    <h2 id="Metrics">@Model.ObserveEnvironment.getIconType(new ObsMetric()) Metrics</h2>
    <a href="#top">Back to Top</a>

    <table class="AlternatingRowTable SortableTable">
        <thead>
            <th>View</th>
            <th>Data</th>
            <th>Name</th>
            <th>Desc.</th>
            <th>Type</th>
            <th>Unit</th>
            <th>Rollup</th>
            <th>Agg.</th>
            <th>Bucket Size</th>
            <th>Cardinality</th>
            <th>Points</th>
            <th>Link Labels</th>
            <th>Tags</th>
            <th>UserDefined</th>
            <th>State</th>
            <th>Last Data</th>
        </thead>
        <tbody>
        @foreach (ObsMetric entity in Model.CurrentDataset.Metrics)
        {        
            ObsDataset parentDataset = (ObsDataset)entity.Parent;

            <tr id="tableRowMetric_@entity.id">
                <td>@Html.ActionLink("📶 View", "Metric", "Details", new { id= Convert.ToBase64String(Encoding.UTF8.GetBytes(entity.id)), userid=@Model.CurrentUser.UniqueID }, null)</td>
                <td><a href="@String.Format("{0}workspace/{1}/metric-explorer?datasetId={2}&metricName={3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.datasetId, entity.name)">📄 Data</a></td>
                <td>@entity.name</td>
                <td>
                    @if (entity.description.Length > 0)
                    {
                        <span title="@entity.description">🧾</span> 
                    }
                    else
                    {
                        @Html.Raw("&nbsp;")
                    }
                </td>
                <td>@entity.type</td>
                <td>@entity.unit</td>
                <td>@entity.rollup</td>
                <td>@entity.aggregate</td>
                <td>@entity.suggestedBucketSize</td>
                <td>@entity.cardinality</td>
                <td>@entity.numPoints</td>
                <td>@entity.NumLinkLabels</td>
                <td>@entity.NumTags</td>
                <td>@entity.userDefined</td>
                <td>@entity.state</td>
                <td>@entity.lastReported.ToString("u")</td>
            </tr>
        }
        </tbody>
    </table>
}


<script src="~/js/DetailsCommon.js" asp-append-version="true"></script>