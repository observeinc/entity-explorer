@using Observe.EntityExplorer.DataObjects;

@model Observe.EntityExplorer.Models.BaseViewModel;

@{
    ViewData["Title"] = "Datastreams and Tokens";
}

<p>
    <span class="spanError">@ViewData["ErrorMessage"]</span>
</p>
@if (ViewData["ErrorMessage"] != null)
{
    return;
}

<p>@Html.ActionLink("Back to Home", "Index", "Home", new { userid=@Model.CurrentUser.UniqueID }, null)</p>

<h1>@Model.ObserveEnvironment.getIconType(new ObsDatastream()) Datastreams and Tokens</h1>

<p>
    <a href="#Datastreams">@Model.ObserveEnvironment.getIconType(new ObsDatastream()) Datastreams (@Model.ObserveEnvironment.AllDatastreamsDict.Count)</a>
    <a href="#Tokens">@Model.ObserveEnvironment.getIconType(new ObsToken()) Token (@Model.ObserveEnvironment.AllTokensDict.Count)</a>
</p>

<h2 id="DatastreamsDatastreams">@Model.ObserveEnvironment.getIconType(new ObsDatastream()) Datastreams (@Model.ObserveEnvironment.AllDatastreamsDict.Values.Count)</h2>
<a href="#top">Back to Top</a>

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>Dataset</th>
        <th>Data</th>
        <th>Edit</th>
        <th>Origin</th>
        <th>ID</th>
        <th>Name</th>
        <th>Description</th>
        <th>Enabled</th>
        <th>Tokens</th>
        <th>Retention</th>
        <th>Bytes</th>
        <th>GB</th>
        <th>TB</th>
        <th>Obs.</th>
        <th>Created</th>
        <th>Updated</th>
    </thead>
    <tbody>
    @foreach (ObsDatastream entity in @Model.ObserveEnvironment.AllDatastreamsDict.Values.ToList())
    {
        long totalBytes = entity.Tokens.Sum(d => d.NumBytes);
        double totalGB = totalBytes / Math.Pow(10, 9);
        double totalTB = totalBytes / Math.Pow(10, 12);

        <tr id="tableRowDatastream_@entity.id">
            <td>@Html.ActionLink("🎫 View", "Dataset", "Details", new { id= entity.DatastreamDataset.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(entity.DatastreamDataset), entity.DatastreamDataset.id)">📄 Data</a></td>
            <td><a href="@String.Format("{0}workspace/{1}/datastreams/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">🛠️ Edit</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(@entity) <span title="@entity.source">@entity.OriginType</span></td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>
                @if (entity.description.Length > 0)
                {
                    <span title="@entity.description">🧾</span> 
                }
            </td>
            <td>@Model.ObserveEnvironment.getIconEnabled(entity)@entity.IsEnabled</td>
            <td>@entity.Tokens.Count</td>
            <td>@entity.RetentionDays</td>
            <td>@totalBytes.ToString("##0")</td>
            <td>@totalGB.ToString("##0.0")</td>
            <td>@totalTB.ToString("##0.000")</td>
            <td>@entity.Tokens.Sum(d => d.NumObservations).ToString("##0")</td>
            <td>@entity.createdDate.ToString("u")/ @entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/ @entity.updatedBy.label</td>
        </tr>
    }
    </tbody>
</table>

<h2 id="Tokens">@Model.ObserveEnvironment.getIconType(new ObsToken()) Tokens (@Model.ObserveEnvironment.AllTokensDict.Values.Count)</h2>
<a href="#top">Back to Top</a>

<table class="AlternatingRowTable SortableTable">
    <thead>
        @* <th>View</th> *@
        <th>Data</th>
        <th>Edit</th>
        <th>Origin</th>
        <th>Datastream</th>
        <th>Type</th>
        <th>ID</th>
        <th>Name</th>
        <th>Description</th>
        <th>Enabled</th>
        <th>Bytes</th>
        <th>GB</th>
        <th>TB</th>
        <th>Obs.</th>
        <th>Start Ingest</th>
        <th>Last Ingest</th>
        <th>Last Error</th>
        <th>Created</th>
        <th>Updated</th>
    </thead>
    <tbody>
    @foreach (ObsToken entity in @Model.ObserveEnvironment.AllTokensDict.Values.OrderBy(t => t.Parent.name).ThenBy(t => t.name).ToList())
    {
        double totalGB = entity.NumBytes / Math.Pow(10, 9);
        double totalTB = entity.NumBytes / Math.Pow(10, 12);

        <tr id="tableRowDatastream_@entity.id">
            @* <td>@Html.ActionLink("🎟️ View", "Token", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td> *@
            <td><a href="@String.Format("{0}workspace/{1}/dataset/{2}/{3}?filter-DATASTREAM_TOKEN_ID={4}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, @Model.ObserveEnvironment.getDatasetURLPartType(((ObsDatastream)(entity.Parent)).DatastreamDataset), ((ObsDatastream)(entity.Parent)).DatastreamDataset.id, entity.id)">📄 Data</a></td>
            <td><a href="@String.Format("{0}workspace/{1}/datastreams/{2}/{3}/{4}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.Parent.id, entity.kind, entity.id)">🛠️ Edit</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(@entity) <span title="@entity.source">@entity.OriginType</span></td>
            <td>@entity.Parent.name</td>
            <td>@Model.ObserveEnvironment.getIconTokenType(@entity) @entity.kind</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>
                @if (entity.description.Length > 0)
                {
                    <span title="@entity.description">🧾</span> 
                }
            </td>
            <td>@Model.ObserveEnvironment.getIconEnabled(entity)@entity.IsEnabled</td>
            <td>@entity.NumBytes.ToString("##0")</td>
            <td>@totalGB.ToString("##0.0")</td>
            <td>@totalTB.ToString("##0.000")</td>
            <td>@entity.NumObservations.ToString("##0")</td>
            <td>@entity.firstIngest.ToString("u")</td>
            <td>@entity.lastIngest.ToString("u")</td>
            <td>@entity.lastError.ToString("u")</td>
            <td>@entity.createdDate.ToString("u")/ @entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/ @entity.updatedBy.label</td>
        </tr>
    }
    </tbody>
</table>

<script src="~/js/DetailsCommon.js" asp-append-version="true"></script>