@using Observe.EntityExplorer.DataObjects;
@using System.Text;

@model Observe.EntityExplorer.Models.BaseViewModel;

@{
    ViewData["Title"] = "Select Monitor";
}

<p>
    <span class="spanError">@ViewData["ErrorMessage"]</span>
</p>
@if (ViewData["ErrorMessage"] != null)
{
    return;
}

<p>@Html.ActionLink("Back to Home", "Index", "Home", new { userid=@Model.CurrentUser.UniqueID }, null)</p>

<h1>📟 Select Monitor and Action</h1>
@{
    ObsCompositeObjectType[] categoriesOfMonitors = new ObsCompositeObjectType[] {
        ObsCompositeObjectType.MetricThresholdMonitor, 
        ObsCompositeObjectType.LogThresholdMonitor, 
        ObsCompositeObjectType.ResourceCountThresholdMonitor, 
        ObsCompositeObjectType.PromotionMonitor, 
        ObsCompositeObjectType.ResourceTextValueMonitor};
}
<p>
    @foreach (ObsCompositeObjectType objectType in categoriesOfMonitors)
    {    
        <a href="#@objectType">@objectType</a>
    }
</p>

@foreach (ObsCompositeObjectType objectType in categoriesOfMonitors)
{
    List<ObsCompositeObject> selectedMonitors = Model.ObserveEnvironment.ObserveObjects.Where(o => (o.ObjectType & @objectType) == @objectType).ToList();

    if (selectedMonitors.Count > 0)
    {
        <h2 id="@objectType">@objectType (@selectedMonitors.Count)</h2>
        <a href="#top">Back to Top</a>
    }

    <table class="AlternatingRowTable SortableTable">
        <thead>
            <th>Details</th>
            <th>Notif.</th>
            <th>Edit</th>
            <th>Type</th>
            <th>Origin</th>
            <th>ID</th>
            <th>Name</th>
            <th>Comm.</th>
            <th>Enabled</th>
            <th>Actions</th>
            <th>Stages</th>
            <th>Uses</th>
            <th>Created</th>
            <th>Updated</th>
        </thead>
        <tbody>
        @foreach (ObsMonitor entity in selectedMonitors)
        {
            <tr id="tableRowMonitor_@entity.id">
                <td>@Html.ActionLink("📟 Details", "Monitor", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
                <td><a href="@String.Format("{0}workspace/{1}/notification/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, Convert.ToBase64String(Encoding.UTF8.GetBytes(String.Format("{{\"monitorId\":\"{0}\"}}", entity.id))))">📄 Notif.</a></td>
                <td><a href="@String.Format("{0}workspace/{1}/monitor/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">🛠️ Edit</a></td>
                <td>@Html.Raw(objectType switch {ObsCompositeObjectType.MetricThresholdMonitor => "📈", ObsCompositeObjectType.LogThresholdMonitor => "📜", ObsCompositeObjectType.ResourceCountThresholdMonitor => "🍫", ObsCompositeObjectType.PromotionMonitor => "🕙", ObsCompositeObjectType.ResourceTextValueMonitor => "🏆", _ => "❓"})@entity.kind</td>
                <td>@Html.Raw(entity.OriginType switch {ObsObjectOriginType.System => "⚙️", ObsObjectOriginType.App => "📊", ObsObjectOriginType.User => "👋", ObsObjectOriginType.DataStream => "🎏", ObsObjectOriginType.Terraform => "🛤️", _ => "❓"})@entity.OriginType</td>
                <td>@entity.id</td>
                <td>@entity.name</td>
                <td>
                    @if (entity.comment.Length > 0)
                    {
                        <span title="@entity.comment">📝</span> 
                    }
                </td>
                <td>@Html.Raw(entity.IsEnabled switch {true => "✅", false => "❌"})@entity.IsEnabled</td>
                <td>@entity.NumActions</td>
                <td>@entity.NumStages</td>
                <td>@{
                        List<ObjectRelationship> dataRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.ProvidesData);
                        if (dataRelationshipsSource.Count > 0)
                        {
                            @Html.Raw(String.Format("📝Data>This: {0} <br/>", dataRelationshipsSource.Count));
                        }

                        List<ObjectRelationship> linkRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.Linked);
                        if (linkRelationshipsSource.Count > 0)
                        {
                            @Html.Raw(String.Format("🔗Link>This: {0} <br/>", linkRelationshipsSource.Count))
                        }
                    }
                </td>            
                <td>@entity.createdDate.ToString("u")/@entity.createdBy.label</td>
                <td>@entity.updatedDate.ToString("u")/@entity.updatedBy.label</td>
            </tr>
        }
        </tbody>
    </table>    
}

<script src="~/js/DetailsCommon.js" asp-append-version="true"></script>