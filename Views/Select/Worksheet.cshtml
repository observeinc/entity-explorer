@using Observe.EntityExplorer.DataObjects;

@model Observe.EntityExplorer.Models.BaseViewModel;

@{
    ViewData["Title"] = "Select Worksheet";
}

<p>
    <span class="spanError">@ViewData["ErrorMessage"]</span>
</p>
@if (ViewData["ErrorMessage"] != null)
{
    return;
}

<p>@Html.ActionLink("Back to Home", "Index", "Home", new { userid=@Model.CurrentUser.UniqueID }, null)</p>

<h1>@Model.ObserveEnvironment.getIconType(new ObsWorksheet()) Select Worksheet and Action</h1>

@{
    List<ObsCompositeObject> selectedWorksheets = Model.ObserveEnvironment.ObserveObjects.Where(o => (o.ObjectType & ObsCompositeObjectType.Worksheet) == ObsCompositeObjectType.Worksheet).ToList();
}

<table class="AlternatingRowTable SortableTable">
    <thead>
        <th>View</th>
        <th>Data</th>
        <th>Origin</th>
        <th>ID</th>
        <th>Name</th>
        <th>Stages</th>
        <th>Params</th>
        <th>Uses</th>
        <th>Created</th>
        <th>Updated</th>
    </thead>
    <tbody>
    @foreach (ObsWorksheet entity in selectedWorksheets)
    {
        <tr id="tableRowWorksheet_@entity.id">
            <td>@Html.ActionLink("📝 View", "Worksheet", "Details", new { id = entity.id, userid=@Model.CurrentUser.UniqueID }, null)</td>
            <td><a href="@String.Format("{0}workspace/{1}/worksheet/{2}", @Model.CurrentUser.CustomerEnvironmentUrl, @Model.CurrentUser.WorkspaceID, entity.id)">📄 Data</a></td>
            <td>@Model.ObserveEnvironment.getIconOriginType(entity) @entity.OriginType</td>
            <td>@entity.id</td>
            <td>@entity.name</td>
            <td>@entity.NumStages</td>
            <td>@entity.NumParameters</td>
            <td>
                @{
                    List<ObjectRelationship> dataRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.ProvidesData);
                    if (dataRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("📝Data>This: {0} <br/>", dataRelationshipsSource.Count));
                    }

                    List<ObjectRelationship> linkRelationshipsSource = Model.ObserveEnvironment.GetRelationshipsOfThis(@entity, ObsObjectRelationshipType.Linked);
                    if (linkRelationshipsSource.Count > 0)
                    {
                        @Html.Raw(String.Format("🔗Link>This: {0} <br/>", linkRelationshipsSource.Count))
                    }
                }
            </td>            
            <td>@entity.createdDate.ToString("u")/@entity.createdBy.label</td>
            <td>@entity.updatedDate.ToString("u")/@entity.updatedBy.label</td>
        </tr>
    }
    </tbody>
</table>

<script src="~/js/DetailsCommon.js" asp-append-version="true"></script>